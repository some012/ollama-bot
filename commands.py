import logging

import nest_asyncio
import ollama
from telegram import Update
from telegram.ext import ContextTypes

nest_asyncio.apply()

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

user_ids = {}
context_memory = {}


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(f'–ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?')


async def about(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    about_text = (
        "ü§ñ *Llama3 –ë–æ—Ç* ü§ñ\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –Ω–∞ –±–∞–∑–µ –º–æ—â–Ω–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ llama3, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, "
        "–æ–±—Å—É–∂–¥–∞—Ç—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã, –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ–∏ –∏ —Ç–µ–∫—Å—Ç—ã, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ—Å—Ç–æ –≤–µ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –±–µ—Å–µ–¥—ã!\n\n"
        "*–ß—Ç–æ –±–æ—Ç —É–º–µ–µ—Ç?*\n"
        "- –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n"
        "- –ü–æ–º–æ–≥–∞–µ—Ç —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ\n"
        "- –ü—Ä–æ–≤–æ–¥–∏—Ç –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É\n"
        "- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥\n\n"
        "*–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?*\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –±–æ—Ç –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –Ω–∞–∏–ª—É—á—à–∏–π –æ—Ç–≤–µ—Ç, –∏—Å—Ö–æ–¥—è –∏–∑ —Å–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π."
    )
    photo = open("./res/ollama.png", "rb")
    await update.message.reply_photo(photo=photo)
    await update.message.reply_text(text=about_text, parse_mode="Markdown")


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in user_ids:
        user_ids[user_id] = {'last_message': None, 'preferences': {}}
        context_memory[user_id] = []

    message_text = update.message.text
    context_messages = context_memory[user_id]

    context_messages.append({'role': 'user', 'content': message_text})
    context_memory[user_id] = context_messages[-8:]

    try:
        response = ollama.chat(model='llama3', messages=context_memory[user_id])
        await update.message.reply_text(response['message']['content'])
    except Exception as e:
        logging.error(f"Error while getting response from ollama: {e}")
        await update.message.reply_text('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
